# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: UKHO Windows 2019

steps:

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator\\workflowcoordinator.csproj'
    feedsToUse: 'select'
  displayName: 'dotnet restore workflowcoordinator'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator\\workflowcoordinator.csproj'
  displayName: 'dotnet build workflowcoordinator'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator.unittests\\workflowcoordinator.unittests.csproj'
    feedsToUse: 'select'
  displayName: 'dotnet restore workflowcoordinatortests'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator.unittests\\workflowcoordinator.unittests.csproj'
  displayName: 'dotnet build workflowcoordinatortests'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator.unittests\\workflowcoordinator.unittests.csproj'
    arguments: -c $(BuildConfiguration) --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true --settings:'$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator.unittests\\CodeCoverage.runsettings'
  displayName: 'dotnet test workflowcoordinatortests'

- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool

- script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create reports
  
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)\coverlet\reports\Cobertura.xml

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(Build.SourcesDirectory)\\src\\workflowcoordinator\\workflowcoordinator\\workflowcoordinator.csproj'
    zipAfterPublish: false
    arguments: '--output $(Build.ArtifactStagingDirectory)\\WebJob\\App_Data\\jobs\\continuous'
  displayName: 'Publish Solution'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '"dotnet workflowcoordinator.dll" | Out-File run.cmd -Encoding ASCII; $LASTEXITCODE'
    workingDirectory: '$(Build.ArtifactStagingDirectory)\\WebJob\\App_Data\\jobs\\continuous\\workflowcoordinator'
  displayName: 'Generate run.cmd'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'License.xml'
  name: 'nsblicense'
  displayName: 'Download NSB License from Secure Files'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'copy-item $(nsblicense.secureFilePath) .\\'
    workingDirectory: '$(Build.ArtifactStagingDirectory)\\WebJob\\App_Data\\jobs\\continuous\\workflowcoordinator'
  displayName: 'Copy NSB License'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'workflowcoordinator'
    publishLocation: 'Container'
  displayName: 'Publish workflowcoordinator Artifact'


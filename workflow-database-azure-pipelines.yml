# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: UKHO Windows 2019

steps:

- task: VSBuild@1
  inputs:
    solution: '$(Build.SourcesDirectory)\\src\\Databases\\WorkflowDatabase\\WorkflowDatabase.sqlproj'
    msbuildArgs: /t:Build;Publish /p:SqlPublishProfilePath=WorkflowDatabase.LocalDb.publish.xml
  displayName: 'Build WorkflowDatabase and publish to LocalDb'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)\\src\\Databases\\WorkflowDatabase.Tests\\WorkflowDatabase.Tests.csproj'
  displayName: 'dotnet test LocalDb instance of database'

- task: VSBuild@1
  inputs:
    solution: '$(Build.SourcesDirectory)\\src\\Databases\\WorkflowDatabase\\WorkflowDatabase.sqlproj'
  displayName: 'Build WorkflowDatabase Dacpac'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\\src\\Databases\\WorkflowDatabase\\bin\\debug\\WorkflowDatabase.dacpac'
    ArtifactName: 'workflowdatabase'
    publishLocation: 'Container'
  displayName: 'Publish WorkflowDatabase'

# Keep this for when Azure DevOps feature is released shortly
#
#environment: 'tm2dev.workflowdatabase'
#  strategy:
#    runOnce:
#      deploy:
#        steps:
#        - task: SqlAzureDacpacDeployment@1
#          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#          inputs:
#            azureSubscription: 'TM2 Dev/Test Sub Dev RG'
#            ServerName: 'taskmanager-dev-sqlserver.database.windows.net'
#            DatabaseName: 'taskmanager-dev-workflowdatabase'
#            SqlUsername: '$(SQLUsername)'
#            SqlPassword: '$(SQLPassword)'
#            DacpacFile: '$(System.DefaultWorkingDirectory)/WorkflowDatabase/workflowdatabase/WorkflowDatabase.dacpac'
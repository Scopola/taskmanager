trigger:
  branches:
    include:
    - features/*
  paths:
    include:
    - src/SourceDocumentService/*

pr:
  branches:
    include:
    - master
  paths:
    include:
    - src/SourceDocumentService/*

stages:
- stage: Build
  jobs:
    - job: RestoreBuildAndDeploy
      pool: NautilusBuild

      workspace:
          clean: all

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1.x SDK'
      inputs:
        packageType: sdk
        version: 3.1.x
        installationPath: $(Agent.ToolsDirectory)\\dotnet

      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $InformationPreference = "Continue"
            Show-PackageLicences -pathToSource $(build.sourcesdirectory) -nugetFeedUrl "https://proget.ukho.gov.uk/nuget/operations/"

      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)\\src\\SourceDocumentService\\SourceDocumentService.csproj'
          feedsToUse: 'select'
        displayName: 'dotnet restore SourceDocumentService'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          arguments: "--configuration $(BuildConfiguration) --no-restore"
          projects: '$(Build.SourcesDirectory)\\src\\SourceDocumentService\\SourceDocumentService.csproj'
        displayName: 'dotnet build SourceDocumentService'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)\\src\\SourceDocumentService.UnitTests\\SourceDocumentService.unittests.csproj'
          feedsToUse: 'select'
        displayName: 'dotnet restore SourceDocumentServiceTests'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          arguments: "--configuration Debug --no-restore"
          projects: '$(Build.SourcesDirectory)\\src\\SourceDocumentService.UnitTests\\SourceDocumentService.unittests.csproj'
        displayName: 'dotnet build SourceDocumentServiceTests'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          arguments: "--no-build"
          projects: '$(Build.SourcesDirectory)\\src\\SourceDocumentService.UnitTests\\SourceDocumentService.UnitTests.csproj'
        displayName: 'dotnet test SourceDocumentServiceTests'

    - job: DependencyCheck
        pool: NautilusBuild

        workspace:
          clean: all

        steps:
        - task: UseDotNet@2
          displayName: 'Use .NET Core 2.1.x SDK'
          inputs:
            packageType: sdk
            version: 2.1.x
            installationPath: $(Agent.ToolsDirectory)\\dotnet

        - task: UseDotNet@2
          displayName: 'Use .NET Core 3.1.x SDK'
          inputs:
            packageType: sdk
            version: 3.1.x
            installationPath: $(Agent.ToolsDirectory)\\dotnet

        - task: DotNetCoreCLI@2
          inputs:
            command: publish
            arguments: "--configuration $(BuildConfiguration) --output $(System.DefaultWorkingDirectory)/publish_output"
            projects: "**/SourceDocumentService.csproj"
            publishWebProjects: false
            modifyOutputPath: false
            zipAfterPublish: false

        - task: CmdLine@2
          inputs:
            script: 'dependency-check --project "SourceDocumentService - $(Build.SourceBranchName)" --scan "$(System.DefaultWorkingDirectory)/publish_output" --out "$(Build.SourcesDirectory)\DCReport" --suppression $(Build.SourcesDirectory)\NVDSuppressions.xml"'
          displayName: "Run NVD Checker"

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.SourcesDirectory)\DCReport'
            artifact: "NVD report"
            publishLocation: "pipeline"

        - task: PowerShell@2
          displayName: "Fail build if dependency checker has vulnerabilities"
          inputs:
            targetType: inline
            script: Invoke-VulnerabilityCheck -ReportLocation $(Build.SourcesDirectory)\DCReport\*        

